<%- include('../partials/head') %>
</head>
<body class="bg-gradient-to-br from-pink-200 via-yellow-100 to-blue-200 min-h-screen font-sans">
<%- include('../partials/nav') %>
  <div class="flex items-center justify-center min-h-screen">
  <div class="bg-white/80 backdrop-blur-lg shadow-2xl rounded-3xl w-full max-w-4xl mx-4 p-10 flex flex-col md:flex-row gap-10">
    <!-- Left: Form -->
    <div class="flex-1 flex flex-col justify-center">
      <h1 class="text-3xl font-extrabold text-purple-700 mb-6 text-center">Upload Students Excel</h1>
      <!-- Select Class -->
      <div class="mb-6">
        <p class="font-semibold mb-2 text-gray-700">Select Class Name:</p>
        <div class="flex gap-6">
          <label class="flex items-center gap-2">
            <input type="radio" name="className" value="CSE" checked class="accent-purple-600" /> CSE
          </label>
          <!-- <label class="flex items-center gap-2">
            <input type="radio" name="className" value="ECE" class="accent-purple-600" /> ECE
          </label>
          <label class="flex items-center gap-2">
            <input type="radio" name="className" value="ME" class="accent-purple-600" /> ME
          </label> -->
        </div>
      </div>
      <!-- Select Section -->
      <div class="mb-6">
        <p class="font-semibold mb-2 text-gray-700">Select Section Name:</p>
        <div class="flex gap-6">
          <label class="flex items-center gap-2">
            <input type="radio" name="sectionName" value="A" checked class="accent-pink-500" /> A
          </label>
          <label class="flex items-center gap-2">
            <input type="radio" name="sectionName" value="B" class="accent-pink-500" /> B
          </label>
          <label class="flex items-center gap-2">
            <input type="radio" name="sectionName" value="C" class="accent-pink-500" /> C
          </label>
        </div>
      </div>

      <div class="mb-6">
        <p class="font-semibold mb-2 text-gray-700">Select Year:</p>
        <div class="flex gap-6">
          <label class="flex items-center gap-2">
            <input type="radio" name="year" value="I" checked class="accent-pink-500" /> I
          </label>
          <label class="flex items-center gap-2">
            <input type="radio" name="year" value="II" class="accent-pink-500" /> II
          </label>
          <label class="flex items-center gap-2">
            <input type="radio" name="year" value="III" class="accent-pink-500" /> III
          </label>
          <label class="flex items-center gap-2">
            <input type="radio" name="year" value="IV" class="accent-pink-500" /> IV
          </label>
        </div>
      </div>
      <!-- File input -->
      <div class="mb-6">
        <label for="file" class="block font-semibold mb-2 text-gray-700">Upload Excel File:</label>
        <input type="file" id="file" accept=".xlsx,.xls" class="border border-purple-300 rounded-lg p-3 w-full bg-purple-50 focus:outline-none focus:ring-2 focus:ring-purple-400 transition" />
      </div>
      <!-- Button to send POST -->
      <button id="sendBtn" class="bg-gradient-to-r from-purple-600 to-pink-500 text-white py-3 px-6 rounded-xl font-bold shadow-lg hover:scale-105 transition mb-4 hidden w-full">
        Send Students Data
      </button>
    </div>
    <!-- Right: Parsed Students -->
    <div class="flex-1 bg-white/60 rounded-2xl shadow-inner p-6 overflow-auto max-h-[32rem]">
      <h2 class="text-xl font-bold text-gray-800 mb-4 text-center">Parsed Students</h2>
      <div id="result" class="text-left text-sm max-h-[24rem] overflow-auto"></div>
    </div>
  </div>
  </div>
  <script>
    let studentsData = [];

    document.getElementById('file').addEventListener('change', e => {
      const file = e.target.files[0];
      const reader = new FileReader();
      console.log('gg',file);
      
      reader.onload = evt => {
        const workbook = XLSX.read(new Uint8Array(evt.target.result), { type: 'array' });
        const sheet = workbook.Sheets[workbook.SheetNames[0]];
        const json = XLSX.utils.sheet_to_json(sheet);

        const students = json.map(row => {
          const keys = Object.keys(row);
          const nameKey = keys.find(k => k.toLowerCase().includes('name'));
          const enrollKey = keys.find(k => k.toLowerCase().includes('enroll'));
          return {
            name: row[nameKey] || '',
            enrollmentNo: row[enrollKey] || ''
          };
        });

        studentsData = students;
        document.getElementById('sendBtn').classList.remove('hidden');

        document.getElementById('result').innerHTML = students.length
          ? `<ul class="list-disc pl-5 space-y-1">
              ${students.map(s => `<li class="py-1"><span class="font-semibold text-purple-700">${s.name}</span> <span class="text-gray-500">-</span> <span class="text-pink-600">${s.enrollmentNo}</span></li>`).join('')}
            </ul>`
          : `<div class="text-gray-400 italic">No students found in file.</div>`;
      };

      reader.readAsArrayBuffer(file);
    });

    document.getElementById('sendBtn').addEventListener('click', () => {
      if (studentsData.length === 0) {
        alert('Please upload and parse an Excel file first.');
        return;
      }

      const className = document.querySelector('input[name="className"]:checked').value;
      const sectionName = document.querySelector('input[name="sectionName"]:checked').value;
      const year = document.querySelector('input[name="year"]:checked').value;

      const payload = {
        className,
        sectionName,
        year,
        students: studentsData
      };

      fetch('/upload', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(payload)
      })
      .then(res => res.json())
      .then(data => {
        alert(data.message || 'Students saved successfully!');
        studentsData = [];
        document.getElementById('file').value = '';
        document.getElementById('result').innerHTML = '';
        document.getElementById('sendBtn').classList.add('hidden');
      })
      .catch(err => {
        console.error('Error:', err);
        alert('Failed to save students.');
      });
    });
  </script>
</body>
</html>
