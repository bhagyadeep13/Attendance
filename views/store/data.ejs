<%- include('../partials/head') %>
</head>
<body class="bg-gray-50 min-h-screen font-sans">
<%- include('../partials/nav') %>

<div class="flex items-center justify-center min-h-screen">
  <div class="bg-white shadow-xl rounded-2xl border border-gray-200 w-full max-w-4xl mx-4 p-10 flex flex-col md:flex-row gap-10">

    <!-- Left: Form -->
    <div class="flex-1 flex flex-col justify-center">
      <h1 class="text-3xl font-extrabold text-purple-700 mb-6 text-center">
        Upload Students Excel
      </h1>

      <!-- Select Class -->
      <div class="mb-6">
        <p class="font-semibold mb-2 text-gray-700">Select Class Name:</p>
        <div class="flex flex-col gap-2">
          <label class="flex items-center gap-2">
            <input type="radio" name="className" value="CSE" checked class="accent-blue-600" /> CSE
          </label>
          <!-- Add more classes if needed -->
        </div>
      </div>

      <!-- Select Section -->
      <div class="mb-6">
        <p class="font-semibold mb-2 text-gray-700">Select Section Name:</p>
        <div class="flex flex-col gap-2">
          <label class="flex items-center gap-2">
            <input type="radio" name="sectionName" value="A" checked class="accent-blue-600" /> A
          </label>
          <label class="flex items-center gap-2">
            <input type="radio" name="sectionName" value="B" class="accent-blue-600" /> B
          </label>
          <label class="flex items-center gap-2">
            <input type="radio" name="sectionName" value="C" class="accent-blue-600" /> C
          </label>
        </div>
      </div>

      <!-- Select Year -->
      <div class="mb-6">
        <p class="font-semibold mb-2 text-gray-700">Select Year:</p>
        <div class="flex flex-col gap-2">
          <label class="flex items-center gap-2">
            <input type="radio" name="year" value="I" checked class="accent-blue-600" /> I
          </label>
          <label class="flex items-center gap-2">
            <input type="radio" name="year" value="II" class="accent-blue-600" /> II
          </label>
          <label class="flex items-center gap-2">
            <input type="radio" name="year" value="III" class="accent-blue-600" /> III
          </label>
          <label class="flex items-center gap-2">
            <input type="radio" name="year" value="IV" class="accent-blue-600" /> IV
          </label>
        </div>
      </div>

      <!-- File input -->
      <div class="mb-6">
        <label for="file" class="block font-semibold mb-2 text-gray-700">
          Upload Excel File:
        </label>
        <input
          type="file"
          id="file"
          accept=".xlsx,.xls"
          class="w-full px-4 py-3 border border-blue-300 rounded-lg shadow-sm bg-blue-50 focus:outline-none focus:ring-2 focus:ring-blue-400 focus:border-blue-400 transition"
        />
      </div>

      <!-- Button -->
      <button
        id="sendBtn"
        class="w-full bg-blue-600 text-white py-3 rounded-lg font-bold shadow hover:bg-white hover:text-blue-600 hover:border hover:border-blue-600 transition hidden"
      >
        Send Students Data
      </button>
    </div>

    <!-- Right: Parsed Students -->
    <div class="flex-1 bg-white rounded-2xl shadow-inner border border-gray-200 p-6 overflow-auto max-h-[32rem]">
      <h2 class="text-xl font-bold text-gray-800 mb-4 text-center">
        Parsed Students
      </h2>
      <div id="result" class="text-left text-sm max-h-[24rem] overflow-auto"></div>
    </div>

  </div>
</div>

<script>
  let studentsData = [];

  document.getElementById('file').addEventListener('change', e => {
    const file = e.target.files[0];
    const reader = new FileReader();

    reader.onload = evt => {
      const workbook = XLSX.read(new Uint8Array(evt.target.result), { type: 'array' });
      const sheet = workbook.Sheets[workbook.SheetNames[0]];
      const json = XLSX.utils.sheet_to_json(sheet);

      const students = json.map(row => {
        const keys = Object.keys(row);
        const nameKey = keys.find(k => k.toLowerCase().includes('name'));
        const enrollKey = keys.find(k => k.toLowerCase().includes('enroll'));
        return {
          name: row[nameKey] || '',
          enrollmentNo: row[enrollKey] || ''
        };
      });

      studentsData = students;
      document.getElementById('sendBtn').classList.remove('hidden');

      document.getElementById('result').innerHTML = students.length
        ? `<ul class="list-disc pl-5 space-y-1">
            ${students.map(s => `
              <li class="py-1">
                <span class="font-semibold text-blue-600">${s.name}</span>
                <span class="text-gray-500"> - </span>
                <span class="text-blue-700">${s.enrollmentNo}</span>
              </li>`).join('')}
          </ul>`
        : `<div class="text-gray-400 italic">No students found in file.</div>`;
    };

    reader.readAsArrayBuffer(file);
  });

  document.getElementById('sendBtn').addEventListener('click', () => {
    if (studentsData.length === 0) {
      alert('Please upload and parse an Excel file first.');
      return;
    }

    const className = document.querySelector('input[name="className"]:checked').value;
    const sectionName = document.querySelector('input[name="sectionName"]:checked').value;
    const year = document.querySelector('input[name="year"]:checked').value;

    const payload = { className, sectionName, year, students: studentsData };

    fetch('/upload', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify(payload)
    })
    .then(res => res.json())
    .then(data => {
      alert(data.message || 'Students saved successfully!');
      studentsData = [];
      document.getElementById('file').value = '';
      document.getElementById('result').innerHTML = '';
      document.getElementById('sendBtn').classList.add('hidden');
    })
    .catch(err => {
      console.error('Error:', err);
      alert('Failed to save students.');
    });
  });
</script>
</body>
</html>
